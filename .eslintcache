[{"C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\index.js":"1","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\App.js":"2","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\reportWebVitals.js":"3","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\DirectoryComponent.js":"4","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\campsites.js":"5","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\CampsiteInfoComponent.js":"6","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\MainComponent.js":"7","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\FooterComponent.js":"8","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\HeaderComponent.js":"9","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\HomeComponent.js":"10","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\ContactComponent.js":"11","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\partners.js":"12","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\comments.js":"13","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\promotions.js":"14","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\AboutComponent.js":"15","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\configureStore.js":"16","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\comments.js":"17","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionCreators.js":"18","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\partners.js":"19","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\campsites.js":"20","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\promotions.js":"21","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionTypes.js":"22","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\LoadingComponent.js":"23","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\forms.js":"24","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\baseUrl.js":"25"},{"size":695,"mtime":1612232916194,"results":"26","hashOfConfig":"27"},{"size":593,"mtime":1612839938704,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1611507147904,"results":"29","hashOfConfig":"27"},{"size":2328,"mtime":1613693802516,"results":"30","hashOfConfig":"27"},{"size":1242,"mtime":1612333188915,"results":"31","hashOfConfig":"27"},{"size":7662,"mtime":1613689858217,"results":"32","hashOfConfig":"27"},{"size":3697,"mtime":1613693134373,"results":"33","hashOfConfig":"27"},{"size":2132,"mtime":1612297254061,"results":"34","hashOfConfig":"27"},{"size":5204,"mtime":1613080620863,"results":"35","hashOfConfig":"27"},{"size":1499,"mtime":1613693051481,"results":"36","hashOfConfig":"27"},{"size":10945,"mtime":1613592277569,"results":"37","hashOfConfig":"27"},{"size":1054,"mtime":1612333201521,"results":"38","hashOfConfig":"27"},{"size":4243,"mtime":1612333195282,"results":"39","hashOfConfig":"27"},{"size":303,"mtime":1612333205853,"results":"40","hashOfConfig":"27"},{"size":4096,"mtime":1612592603593,"results":"41","hashOfConfig":"27"},{"size":818,"mtime":1613592023083,"results":"42","hashOfConfig":"27"},{"size":690,"mtime":1613691871448,"results":"43","hashOfConfig":"27"},{"size":1890,"mtime":1613693659372,"results":"44","hashOfConfig":"27"},{"size":189,"mtime":1613542368285,"results":"45","hashOfConfig":"27"},{"size":638,"mtime":1613590905142,"results":"46","hashOfConfig":"27"},{"size":714,"mtime":1613693703824,"results":"47","hashOfConfig":"27"},{"size":452,"mtime":1613687125326,"results":"48","hashOfConfig":"27"},{"size":246,"mtime":1613590286002,"results":"49","hashOfConfig":"27"},{"size":174,"mtime":1613591504354,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1613693445847,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"k4291p",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\index.js",[],["107","108"],"C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\App.js",[],"C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\reportWebVitals.js",[],"C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\DirectoryComponent.js",[],"C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\campsites.js",[],["109","110"],"C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\CampsiteInfoComponent.js",["111","112","113","114","115","116"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, Button, CardImgOverlay, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Modal, ModalHeader, ModalBody, Label, FormGroup } from 'reactstrap';\r\nimport { Link } from  'react-router-dom';\r\nimport { Control, LocalForm, Errors, } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponents';\r\n\r\n    function RenderCampsite({campsite}){\r\n        return (\r\n            <div className=\"col-md-5 m-1\">\r\n              <Card>\r\n                    <CardImg top src={campsite.image} alt={campsite.name} />\r\n                    <CardBody>\r\n                        <CardText>{campsite.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n        </div>\r\n        );\r\n    }\r\n    function RenderComments({comments, addComment, campsiteId}) {\r\n        if (comments) {\r\n            return (\r\n                <React.Fragment>\r\n                <div className=\"col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                    {comments.map(comment => {return (\r\n                                <div key={comment.id}><p>{comment.text}<br />\r\n                                        {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\r\n                                    </p>\r\n                                </div>\r\n                            );\r\n                        }\r\n                    )\r\n                }\r\n                 <CommentForm campsiteId={campsiteId} addComment={addComment}/>\r\n                </div>\r\n                </React.Fragment>\r\n            ); }\r\n        return <div />;\r\n    }\r\nfunction CampsiteInfo(props){\r\n    \r\n        if (props.campsite) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <Breadcrumb>\r\n                                <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\r\n                                <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                            <h2>{props.campsite.name}</h2>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                <div className=\"row\"> \r\n                    <RenderCampsite campsite={props.campsite} />\r\n                    <RenderComments \r\n                          comments={props.comments}\r\n                          addComment={props.addComment}\r\n                          campsiteId={props.campsite.id}\r\n                        />\r\n                </div>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div />\r\n        )\r\n    }\r\n    const required = val => val && val.length;\r\n    const maxLength = len => val => !val || (val.length <= len);\r\n    const minLength = len => val => val && (val.length >= len);\r\n\r\n    class CommentForm extends Component{ \r\n        constructor(props){\r\n            super(props);\r\n            this.state={\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    handleSubmit(values){\r\n        this.toggleModal();\r\n        this.props.addComment(this.props.campsiteId, values.rating, values.author, values.text);\r\n        console.log(this.props.campsiteId)\r\n    }\r\n        render() {\r\n            return (\r\n            <React.Fragment>\r\n                <div>\r\n                    <Button outline onClick={this.toggleModal}>\r\n                    <i className=\"fa fa-pencil fa-lg\" />Submit Comment\r\n                    </Button>\r\n                </div>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                    <LocalForm onSubmit={values => this.handleSubmit(values)}>\r\n                    <FormGroup>\r\n                                <Label htmlFor=\"rating\">Rating</Label>\r\n                                <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                        <option>6</option>\r\n                                    </Control.select>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                                <Label htmlFor=\"name\">Your Name</Label>\r\n                            \r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"comments\">Comment</Label>\r\n                                    <Control.textarea model=\".text\" id=\"text\" name=\"text\"\r\n                                        rows=\"5\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </FormGroup>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                    </Modal>\r\n            </React.Fragment>\r\n            );\r\n        }\r\n    }   \r\n\r\nexport default CampsiteInfo;","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\MainComponent.js",["117","118"],"import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand } from 'reactstrap';\r\nimport Directory from  './DirectoryComponent';\r\nimport CampsiteInfo from './CampsiteInfoComponent';\r\nimport Contact from './ContactComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport About from './AboutComponent';\r\nimport {Switch, Route, Redirect, withRouter, } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport { addComment, fetchCampsites, fetchComments, fetchPromotions } from '../redux/ActionCreators';\r\nimport { actions } from  'react-redux-form';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        campsites: state.campsites,\r\n        comments: state.comments,\r\n        partners: state.partners,\r\n        promotions: state.promotions\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps={\r\n    addComment: (campsiteId, rating, author, text) => (addComment(campsiteId, rating, author, text)),\r\n    fetchCampsites: () => (fetchCampsites()),\r\n    resetFeedbackForm: () => (actions.reset('feedbackForm')),\r\n    fetchComments: () => (fetchComments()),\r\n    fetchPromotions: () => (fetchPromotions())\r\n};\r\n\r\nclass Main extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchCampsites();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromotions();\r\n    }\r\n    \r\n\r\n    render() {\r\n            const HomePage= () => {\r\n                return (\r\n                    <Home \r\n                        campsite={this.props.campsites.campsites.filter(campsite => campsite.featured)[0]}\r\n                        campsitesLoading={this.props.campsites.isLoading}\r\n                        campsitesErrMess={this.props.campsites.errMess}\r\n                        promotion={this.props.promotions.promotions.filter(promotion => promotion.featured)[0]}\r\n                        promotionLoading={this.props.promotions.isLoading}\r\n                        promotionErrMess={this.props.promotions.errMess}\r\n                        partner={this.props.partners.filter(partner => partner.featured)[0]}\r\n                    />\r\n                )\r\n            }\r\n        const CampsiteWithId = ({match}) => {\r\n                return(\r\n                    <CampsiteInfo\r\n                        campsite={this.props.campsites.campsites.filter(campsite => campsite.id === +match.params.campsiteId)[0]}\r\n                        isLoading={this.props.campsites.isLoading}\r\n                        errMess={this.props.campsites.errMess}\r\n                        comments={this.props.comments.comments.filter(comment => comment.campsiteId === +match.params.campsiteId)}\r\n                        commentsErrMess={this.props.comments.errMess}\r\n                        addComment={this.props.addComment}\r\n                    />\r\n                );\r\n        };\r\n    \r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path ='/home' component={HomePage} />\r\n                    <Route exact path = '/directory' render={()=> <Directory campsites={this.props.campsites}/>}/>\r\n                    <Route exact path = '/contactus' render={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n                    <Route path ='/directory/:campsiteId' component={CampsiteWithId} />\r\n                    <Route exact path ='/aboutus' render={()=> <About partners={this.props.partners}/>} />\r\n                    <Redirect to='/home' />\r\n                </Switch>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\FooterComponent.js",[],"C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\HeaderComponent.js",[],"C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\HomeComponent.js",[],"C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\ContactComponent.js",["119","120","121","122","123","124","125"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row} from 'reactstrap';\r\nimport { Link } from  'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\nconst isNumber = val => !isNaN(+val);\r\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component{\r\n        constructor(props){\r\n            super(props);\r\n            this.state = {\r\n\r\n            };\r\n          \r\n            this.handleSubmit = this.handleSubmit.bind(this);\r\n        }\r\n    \r\n\r\n        handleSubmit(values){\r\n            console.log(\"Current state is \" + JSON.stringify(values));\r\n            alert(\"Current state is \" + JSON.stringify(values));\r\n            this.props.resetFeedbackForm();\r\n        }\r\n    render(){\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                    <div className=\"col\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <h2>Contact Us</h2>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n                <div className=\"row row-content align-items-center\">\r\n                    <div className=\"col-sm-4\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            1 Nucamp Way<br />\r\n                            Seattle, WA 98001<br />\r\n                            U.S.A.\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\r\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Send us your Feedback</h2>\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"col-md-10\">\r\n                    <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, \r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\r\n                                        placeholder=\"Phone number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(10),\r\n                                            maxLength: maxLength(15),\r\n                                            isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".phoneNum\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 10 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid email address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 4, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox\r\n                                                model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>By Phone</option>\r\n                                        <option>By Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );  \r\n    }\r\n}\r\n\r\n\r\nexport default Contact;","C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\partners.js",[],"C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\comments.js",[],"C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\promotions.js",[],"C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\AboutComponent.js",[],"C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\configureStore.js",[],"C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\comments.js",[],"C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionCreators.js",[],"C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\partners.js",[],"C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\campsites.js",[],"C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\promotions.js",[],"C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionTypes.js",[],"C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\LoadingComponent.js",[],"C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\forms.js",[],"C:\\Users\\dmbis\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\baseUrl.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"126","replacedBy":"130"},{"ruleId":"128","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":2,"column":33,"nodeType":"134","messageId":"135","endLine":2,"endColumn":47},{"ruleId":"132","severity":1,"message":"136","line":2,"column":69,"nodeType":"134","messageId":"135","endLine":2,"endColumn":78},{"ruleId":"132","severity":1,"message":"137","line":5,"column":10,"nodeType":"134","messageId":"135","endLine":5,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":108,"column":33,"nodeType":"140","endLine":109,"endColumn":66},{"ruleId":"138","severity":1,"message":"141","line":121,"column":37,"nodeType":"140","endLine":129,"endColumn":39},{"ruleId":"138","severity":1,"message":"142","line":144,"column":37,"nodeType":"140","endLine":147,"endColumn":39},{"ruleId":"132","severity":1,"message":"143","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":16},{"ruleId":"132","severity":1,"message":"144","line":2,"column":18,"nodeType":"134","messageId":"135","endLine":2,"endColumn":29},{"ruleId":"138","severity":1,"message":"141","line":69,"column":33,"nodeType":"140","endLine":77,"endColumn":39},{"ruleId":"138","severity":1,"message":"141","line":94,"column":37,"nodeType":"140","endLine":102,"endColumn":39},{"ruleId":"138","severity":1,"message":"141","line":119,"column":37,"nodeType":"140","endLine":128,"endColumn":39},{"ruleId":"138","severity":1,"message":"141","line":146,"column":37,"nodeType":"140","endLine":153,"endColumn":39},{"ruleId":"138","severity":1,"message":"145","line":170,"column":45,"nodeType":"140","endLine":174,"endColumn":47},{"ruleId":"138","severity":1,"message":"139","line":180,"column":37,"nodeType":"140","endLine":181,"endColumn":66},{"ruleId":"138","severity":1,"message":"142","line":190,"column":37,"nodeType":"140","endLine":193,"endColumn":39},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],["146"],["147"],"no-unused-vars","'CardImgOverlay' is defined but never used.","Identifier","unusedVar","'CardTitle' is defined but never used.","'Loading' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'Navbar' is defined but never used.","'NavbarBrand' is defined but never used.","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]